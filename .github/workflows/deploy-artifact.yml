name: deploy-artifact

on:
  workflow_call:
    inputs:
      project-name:
        description: 'Name of the application to build (e.g. qTox)'
        required: false
        type: string
      artifact-source:
        description: 'Artifact produced by the command (e.g. qTox.AppImage)'
        required: true
        type: string
      artifact-versioned:
        description: 'File name format for the versioned artifact (e.g. qTox-$VERSION.AppImage)'
        required: true
        type: string
      build:
        description: 'Name of the build (e.g. appimage, flatpak, macos)'
        required: true
        type: string
      run:
        description: 'Command to run to build the artifact'
        required: false
        type: string

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Install prerequisites
        run: sudo apt-get install -y --no-install-recommends pcregrep
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Checkout ci-tools
        if: github.repository != 'TokTok/ci-tools'
        uses: actions/checkout@v4
        with:
          repository: TokTok/ci-tools
          path: ci-tools
          submodules: true
      - name: Link ci-tools
        if: github.repository == 'TokTok/ci-tools'
        run: ln -s .. third_party/ci-tools

      - name: Run build
        if: inputs.run
        run: ${{ inputs.run }}

      - name: Generate sha256 checksum
        id: sha256
        run: third_party/ci-tools/tools/artifact_sha256.py
          "${{ inputs.project-name }}"
          ${{ inputs.artifact-source }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.sha256.outputs.project-name }}-${{ github.sha }}-${{ inputs.build }}
          path: ${{ steps.sha256.outputs.artifacts }}
          if-no-files-found: error
      - name: Rename artifact for release upload
        id: release-version
        if: contains(github.ref, 'refs/tags/v')
        run: VERSION="$(echo "$GITHUB_REF" | cut -d / -f 3)";
          third_party/ci-tools/tools/artifact_rename.py
            "${{ inputs.artifact-source }}"
            "${{ inputs.artifact-versioned }}"
            ${{ inputs.artifact-source }}
      - name: Upload to versioned release
        if: contains(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          artifacts: ${{ steps.release-version.outputs.artifacts }}
      - name: Rename artifact for nightly upload
        id: nightly-version
        run: VERSION="nightly";
          third_party/ci-tools/tools/artifact_rename.py
            "${{ inputs.artifact-source }}"
            "${{ inputs.artifact-versioned }}"
            ${{ inputs.artifact-source }}
      - name: Upload to nightly release
        uses: ncipollo/release-action@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          allowUpdates: true
          tag: nightly
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: true
          replacesArtifacts: true
          artifacts: ${{ steps.nightly-version.outputs.artifacts }}
